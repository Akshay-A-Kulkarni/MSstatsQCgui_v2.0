# Run the app ----
shinyApp(ui = ui, server = server)
library(shiny)
# Run the app ----
shinyApp(ui = ui, server = server)
library(shiny)
# Define UI ----
ui <- fluidPage(
titlePanel("My Shiny App"),
sidebarLayout(
sidebarPanel(
h2("Installation"),
p("Shiny is available on CRAN, so you can install it in the usual way from your R console:"),
code('install.packages("shiny")'),
br(),
br(),
br(),
br(),
img(src = "rstudio.png", height = 70, width = 200),
br(),
"Shiny is a product of ",
span("RStudio", style = "color:blue")
),
mainPanel(
h1("Introducing Shiny"),
p("Shiny is a new package from RStudio that makes it ",
em("incredibly easy "),
"to build interactive web applications with R."),
br(),
p("For an introduction and live examples, visit the ",
a("Shiny homepage.",
href = "http://shiny.rstudio.com")),
br(),
h2("Features"),
p("- Build useful web applications with only a few lines of code—no JavaScript required."),
p("- Shiny applications are automatically 'live' in the same way that ",
strong("spreadsheets"),
" are live. Outputs change instantly as users modify inputs, without requiring a reload of the browser.")
)
)
)
# Define server logic ----
server <- function(input, output) {
}
# Run the app ----
shinyApp(ui = ui, server = server)
# Run the app ----
shinyApp(ui = ui, server = server)
runApp()
runApp()
library(shiny)
library(plotly)
shinyApp(
ui = fluidPage(
tabsetPanel(
tabPanel("Map", fluid = TRUE,
sidebarLayout(
sidebarPanel(selectInput("Country", "Select Country", choices = "", selected = "")),
mainPanel(
htmlOutput("Attacks")
)
)
),
tabPanel("plot", fluid = TRUE,
sidebarLayout(
sidebarPanel(sliderInput("year", "Year:", min = 1968, max = 2009, value = 2009, sep='')),
mainPanel(fluidRow(
column(7,  plotlyOutput("")),
column(5, plotlyOutput(""))
)
)
)
)
)
),
server = function(input, output) {
}
)
library(shiny)
library(plotly)
shinyApp(
ui = fluidPage(
tabsetPanel(
tabPanel("Map", fluid = TRUE,
sidebarLayout(
sidebarPanel(selectInput("Country", "Select Country", choices = "", selected = "")),
mainPanel(
htmlOutput("Attacks")
)
)
),
tabPanel("plot", fluid = TRUE,
sidebarLayout(
sidebarPanel(sliderInput("year", "Year:", min = 1968, max = 2009, value = 2009, sep='')),
mainPanel(fluidRow(
column(7,  plotlyOutput("")),
column(5, plotlyOutput(""))
)
)
)
)
)
),
server = function(input, output) {
}
)
library(shiny)
library(plotly)
shinyApp(
ui = fluidPage(
tabsetPanel(
tabPanel("Map", fluid = TRUE,
sidebarLayout(
sidebarPanel(selectInput("Country", "Select Country", choices = "", selected = "")),
mainPanel(
htmlOutput("Attacks")
)
)
),
tabPanel("plot", fluid = TRUE,
sidebarLayout(
sidebarPanel(sliderInput("year", "Year:", min = 1968, max = 2009, value = 2009, sep='')),
mainPanel(fluidRow(
column(7,  plotlyOutput("")),
column(5, plotlyOutput(""))
)
)
)
)
)
),
server = function(input, output) {
}
)
library(shiny)
library(plotly)
shinyApp(
ui = fluidPage(
tabsetPanel(
tabPanel("Map", fluid = TRUE,
sidebarLayout(
sidebarPanel(selectInput("Country", "Select Country", choices = "", selected = "")),
mainPanel(
htmlOutput("Attacks")
)
)
),
tabPanel("plot", fluid = TRUE,
sidebarLayout(
sidebarPanel(sliderInput("year", "Year:", min = 1968, max = 2009, value = 2009, sep='')),
mainPanel(fluidRow(
column(7,  plotlyOutput("")),
column(5, plotlyOutput(""))
)
)
)
)
)
),
server = function(input, output) {
}
)
library(shiny)
library(plotly)
shinyApp(
ui = fluidPage(
tabsetPanel(
tabPanel("Map", fluid = TRUE,
sidebarLayout(
sidebarPanel(selectInput("Country", "Select Country", choices = "", selected = "")),
mainPanel(
htmlOutput("Attacks")
)
)
),
tabPanel("plot", fluid = TRUE,
sidebarLayout(
sidebarPanel(sliderInput("year", "Year:", min = 1968, max = 2009, value = 2009, sep='')),
mainPanel(fluidRow(
column(7,  plotlyOutput("")),
column(5, plotlyOutput(""))
)
)
)
)
)
),
server = function(input, output) {
}
)
library(shiny)
library(plotly)
shinyApp(
ui = fluidPage(
tabsetPanel(
tabPanel("Map", fluid = TRUE,
sidebarLayout(
sidebarPanel(selectInput("Country", "Select Country", choices = "", selected = "")),
mainPanel(
htmlOutput("Attacks")
)
)
),
tabPanel("plot", fluid = TRUE,
sidebarLayout(
sidebarPanel(sliderInput("year", "Year:", min = 1968, max = 2009, value = 2009, sep='')),
mainPanel(fluidRow(
column(7,  plotlyOutput("")),
column(5, plotlyOutput(""))
)
)
)
)
)
),
server = function(input, output) {
}
)
library(shiny)
library(plotly)
shinyApp(
ui = fluidPage(
tabsetPanel(
tabPanel("Map", fluid = TRUE,
sidebarLayout(
sidebarPanel(selectInput("Country", "Select Country", choices = "", selected = "")),
mainPanel(
htmlOutput("Attacks")
)
)
),
tabPanel("plot", fluid = TRUE,
sidebarLayout(
sidebarPanel(sliderInput("year", "Year:", min = 1968, max = 2009, value = 2009, sep='')),
mainPanel(fluidRow(
column(7,  plotlyOutput("")),
column(5, plotlyOutput(""))
)
)
)
)
)
),
server = function(input, output) {
}
)
library(shiny)
library(plotly)
shinyApp(
ui = fluidPage(
tabsetPanel(
tabPanel("Map", fluid = TRUE,
sidebarLayout(
sidebarPanel(selectInput("Country", "Select Country", choices = "", selected = "")),
mainPanel(
htmlOutput("Attacks")
)
)
),
tabPanel("plot", fluid = TRUE,
sidebarLayout(
sidebarPanel(sliderInput("year", "Year:", min = 1968, max = 2009, value = 2009, sep='')),
mainPanel(fluidRow(
column(7,  plotlyOutput("")),
column(5, plotlyOutput(""))
)
)
)
)
)
),
server = function(input, output) {
}
)
library(shiny)
library(plotly)
shinyApp(
ui = fluidPage(
tabsetPanel(
tabPanel("Map", fluid = TRUE,
sidebarLayout(
sidebarPanel(selectInput("Country", "Select Country", choices = "", selected = "")),
mainPanel(
htmlOutput("Attacks")
)
)
),
tabPanel("plot", fluid = TRUE,
sidebarLayout(
sidebarPanel(sliderInput("year", "Year:", min = 1968, max = 2009, value = 2009, sep='')),
mainPanel(fluidRow(
column(7,  plotlyOutput("")),
column(5, plotlyOutput(""))
)
)
)
)
)
),
server = function(input, output) {
}
)
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
install.packages("shinythemes")
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
shinyApp(
ui <-
navbarPage(theme = shinytheme('cosmo'),
h1("MSstatsQC-ML"),
header=tags$head(
tags$style(HTML('.navbar-nav > li >a, .navbar-brand {
margin:0;
align-items: center;
display: flex;
height: 10vh;
}
.navbar {min-height:25px !important;}'))
),
tabPanel(title= "About", fluidPage(style = "width:80%; align:center",
includeMarkdown("include.md")
)),
tabPanel("Upload",
fluidPage(style = "width:80%",
sidebarLayout(
sidebarPanel(
h2("Upload Files"),
# code('BiocManager.install("MSstatsQC-ML")'),
br(),
fileInput("file", h3("File input"))
br(),
fileInput("file", h3("File input"))
),
mainPanel(
h1("Introducing Shiny"),
p("Shiny is a new package from RStudio that makes it ",
em("incredibly easy "),
"to build interactive web applications with R."),
br(),
p("For an introduction and live examples, visit the ",
a("Shiny homepage.",
href = "http://shiny.rstudio.com")),
br(),
h2("Features"),
p("- Build useful web applications with only a few lines of code—no JavaScript required."),
p("- Shiny applications are automatically 'live' in the same way that ",
strong("spreadsheets"),
" are live. Outputs change instantly as users modify inputs, without requiring a reload of the browser.")
)
)
)
)
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
?req
runApp('app2.R')
runApp('app2.R')
install.packages("DT")
library(shiny); runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
runApp('app2.R')
ui <-
navbarPage(theme = shinytheme('cosmo'),
h1("MSstatsQC-ML"),
header=tags$head(
tags$style(HTML('.navbar-nav > li > a, .navbar-brand {
margin:0;
align-items: center;
display: flex;
height: 10vh;
}
.navbar {min-height:25px !important;}
.modal-body{ min-height:700px}'))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
